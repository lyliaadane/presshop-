{% extends 'base.html.twig' %}

{% block title %}Nouvelle Commande{% endblock %}

{% block body %}
    <div class="container-fluid py-5">
        <div class="container py-5">
            <h1 class="mb-4">Informations</h1>
            {{ form_start(form) }}
            <div class="row g-5">
                <div class="col-md-12 col-lg-6 col-xl-7">
                    <div class="row">
                        <div class="col-md-12 col-lg-6">
                            <div class="form-item w-100">
                                <label class="form-label my-3">Nom<sup>*</sup></label>
                                {{ form_widget(form.nom_client) }}
                            </div>
                        </div>
                        <div class="col-md-12 col-lg-6">
                            <div class="form-item w-100">
                                <label class="form-label my-3">Prénom<sup>*</sup></label>
                                {{ form_widget(form.prenom_client) }}
                            </div>
                        </div>
                    </div>
                    <div class="form-item">
                        <label class="form-label my-3">Adresse mail<sup>*</sup></label>
                        {{ form_widget(form.mail_client) }}
                    </div>
                    <div class="form-item">
                        <label class="form-label my-3">Numéro de téléphone <sup>*</sup></label>
                        {{ form_widget(form.telephone_client) }}
                    </div>
                    <div class="form-item">
                        <label class="form-label my-3">Date/Heure de récupération de la commande<sup>*</sup></label>
                        {{ form_widget(form.date_recuperation) }}
                    </div>
                    <div class="form-item">
                        <label class="form-label my-3">Commentaires</label>
                        {{ form_widget(form.commentaires) }}
                    </div>
                </div>

                <div class="col-md-12 col-lg-6 col-xl-5">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Produit</th>
                                    <th>Nom</th>
                                    <th>Prix</th>
                                    <th>Quantité</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for produitCommande in form.commandeProduits %}
                                    {% set data = produitCommande.vars.data %}
                                    {% set produit = data.produit %}
                                    {% set quantite = data.quantite %}
                                    {% set prix = quantite > 0 ? (data.montant / quantite) : 0 %}
                                    <tr data-prix="{{ prix }}">
                                        <th scope="row">
                                            <img src="{{ asset('uploads/images/' ~ produit.image) }}" alt="{{ produit.nom }}" class="img-fluid rounded-circle" style="width: 90px; height: 90px;">
                                        </th>
                                        <td class="py-5">
                                            {{ produit.nom }}
                                            {% if prix < produit.prix %}
                                                <span class="badge bg-danger ms-2">Promo</span>
                                            {% endif %}
                                        </td>
                                        <td class="py-5">
                                            {% if prix < produit.prix %}
                                                <span class="text-decoration-line-through text-muted">{{ produit.prix | number_format(2, '.', ',') }}€</span><br>
                                                <span class="text-danger">{{ prix | number_format(2, '.', ',') }}€</span>
                                            {% else %}
                                                {{ prix | number_format(2, '.', ',') }}€
                                            {% endif %}
                                        </td>
                                        <td class="py-5">
                                            {{ form_widget(produitCommande.quantite, { attr: { class: 'form-control', onchange: 'updateTotal(this)' } }) }}
                                        </td>
                                        <td class="py-5">
                                            <span class="total-price">{{ (prix * quantite) | number_format(2, '.', ',') }}€</span>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>

                    <div class="container-fluid py-2">
                        <div class="container py-2">
                            <div class="p-2 bg-light rounded">
                                <div class="row g-4 text-center align-items-center justify-content-center pt-4">
                                    <div class="col-md-12">
                                        <input type="hidden" name="commande[montant_total]" id="montant_total_input">
                                        <div class="h5">Total de la commande : <span id="totalCommande"></span></div>
                                    </div>
                                </div>
                                <div class="row g-4 text-center align-items-center justify-content-center pt-4">
                                    <div class="col-md-12">
                                        <button type="button" class="btn border-secondary py-3 px-4 text-uppercase w-100 text-primary" id="btnPaiementStripe">
                                            Procéder au paiement
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{ form_rest(form) }}
            {{ form_end(form) }}
        </div>
    </div>

<!-- Modal Paiement -->
<div class="modal fade" id="modalPaiement" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Paiement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label>Numéro de carte</label>
                    <input type="text" class="form-control" name="carte_numero" required>
                </div>
                <div class="mb-3">
                    <label>Date d'expiration</label>
                    <input type="text" class="form-control" name="carte_expiration" placeholder="MM/AA" required>
                </div>
                <div class="mb-3">
                    <label>CVV</label>
                    <input type="text" class="form-control" name="carte_cvv" required>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="btnValiderModalPaiement">Valider et Soumettre</button>
            </div>
        </div>
    </div>
</div>

<a href="#" class="btn btn-primary border-3 border-primary rounded-circle back-to-top">
    <i class="fa fa-arrow-up"></i>
</a>

    <script>
    function updateTotal(input) {
        let row = input.closest('tr');
        let price = parseFloat(row.dataset.prix);
        let quantity = parseInt(input.value) || 0;
        let total = price * quantity;
        row.querySelector('.total-price').textContent = total.toFixed(2) + '€';
        updateOrderTotal();
    }

    function updateOrderTotal() {
        let total = 0;
        document.querySelectorAll('tbody tr').forEach(row => {
            let prixUnitaire = parseFloat(row.dataset.prix) || 0;
            let quantityInput = row.querySelector('input');
            let quantite = parseInt(quantityInput.value) || 0;
            total += prixUnitaire * quantite;
        });

        document.getElementById('totalCommande').textContent = total.toFixed(2) + '€';
        document.getElementById('montant_total_input').value = total.toFixed(2);
    }

    document.addEventListener('DOMContentLoaded', () => {
        updateOrderTotal();
    });

    document.getElementById('btnPaiementStripe').addEventListener('click', async () => {
        let form = document.querySelector('form');
        let formData = new FormData(form);

        let response = await fetch("/commandes/store", {
            method: 'POST',
            credentials: 'same-origin', 
            body: formData
        });

        let result = await response.json();

        if (result.success) {
            let totalCommande = parseFloat(document.getElementById('totalCommande').textContent.replace('€', '').replace(',', ''));
            let stripe = Stripe('{{ stripe_public_key }}');

            let session = await fetch("/create-checkout-session", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    items: [
                        {
                            name: "Total Commande",
                            price: totalCommande,
                            quantity: 1
                        }
                    ]
                })
            });

            let data = await session.json();

            if (data.id) {
                stripe.redirectToCheckout({ sessionId: data.id });
            }
        } else {
            alert("Erreur lors de l'enregistrement de la commande");
        }
    });
    </script>
{% endblock %}
